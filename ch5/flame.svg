<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="998.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="981" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="981" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;) (1 samples, 1.39%)</title><rect x="1140.8" y="661" width="16.4" height="15.0" fill="rgb(222,77,3)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;) (2 samples, 2.78%)</title><rect x="1140.8" y="741" width="32.8" height="15.0" fill="rgb(208,68,23)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype(char, std::__cxx11::regex_traits&lt;char&gt;::_RegexMask) const (2 samples, 2.78%)</title><rect x="501.7" y="517" width="32.7" height="15.0" fill="rgb(227,130,43)" rx="2" ry="2" />
<text text-anchor="" x="504.67" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const (20 samples, 27.78%)</title><rect x="173.9" y="517" width="327.8" height="15.0" fill="rgb(218,37,47)" rx="2" ry="2" />
<text text-anchor="" x="176.89" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__cxx11::basic_string&lt;char, std::char_t..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::bitset&lt;256ul&gt;::reference::operator=(bool) (1 samples, 1.39%)</title><rect x="1091.7" y="565" width="16.4" height="15.0" fill="rgb(208,137,46)" rx="2" ry="2" />
<text text-anchor="" x="1094.67" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::allocator&lt;char&gt;::~allocator() (1 samples, 1.39%)</title><rect x="1009.7" y="485" width="16.4" height="15.0" fill="rgb(206,194,37)" rx="2" ry="2" />
<text text-anchor="" x="1012.72" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="597" width="16.4" height="15.0" fill="rgb(243,66,42)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base() (1 samples, 1.39%)</title><rect x="1009.7" y="517" width="16.4" height="15.0" fill="rgb(208,183,53)" rx="2" ry="2" />
<text text-anchor="" x="1012.72" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool __gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="91.9" y="517" width="16.4" height="15.0" fill="rgb(222,70,11)" rx="2" ry="2" />
<text text-anchor="" x="94.94" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="373" width="16.4" height="15.0" fill="rgb(215,165,19)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*) (1 samples, 1.39%)</title><rect x="747.5" y="501" width="16.4" height="15.0" fill="rgb(212,202,12)" rx="2" ry="2" />
<text text-anchor="" x="750.50" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*) (2 samples, 2.78%)</title><rect x="895.0" y="421" width="32.8" height="15.0" fill="rgb(245,67,12)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode) (1 samples, 1.39%)</title><rect x="1173.6" y="789" width="16.4" height="15.0" fill="rgb(209,36,20)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memmove_avx_unaligned&lt;000000000014d9b0&gt; (1 samples, 1.39%)</title><rect x="911.4" y="373" width="16.4" height="15.0" fill="rgb(243,54,34)" rx="2" ry="2" />
<text text-anchor="" x="914.39" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__copy_move_a&lt;false, char*, char*&gt;(char*, char*, char*) (2 samples, 2.78%)</title><rect x="895.0" y="405" width="32.8" height="15.0" fill="rgb(246,63,49)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*) (1 samples, 1.39%)</title><rect x="1108.1" y="501" width="16.3" height="15.0" fill="rgb(206,14,30)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin() const (1 samples, 1.39%)</title><rect x="1042.5" y="549" width="16.4" height="15.0" fill="rgb(228,35,44)" rx="2" ry="2" />
<text text-anchor="" x="1045.50" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="629" width="16.4" height="15.0" fill="rgb(247,107,17)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new[](unsigned long) (1 samples, 1.39%)</title><rect x="960.6" y="437" width="16.3" height="15.0" fill="rgb(230,32,3)" rx="2" ry="2" />
<text text-anchor="" x="963.56" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*) (2 samples, 2.78%)</title><rect x="468.9" y="421" width="32.8" height="15.0" fill="rgb(224,74,16)" rx="2" ry="2" />
<text text-anchor="" x="471.89" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char() (1 samples, 1.39%)</title><rect x="600.0" y="597" width="16.4" height="15.0" fill="rgb(221,205,49)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;) (2 samples, 2.78%)</title><rect x="501.7" y="501" width="32.7" height="15.0" fill="rgb(236,153,38)" rx="2" ry="2" />
<text text-anchor="" x="504.67" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher(std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; const&amp;) (1 samples, 1.39%)</title><rect x="1140.8" y="533" width="16.4" height="15.0" fill="rgb(244,136,12)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="261" width="16.4" height="15.0" fill="rgb(209,78,46)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="245" width="16.4" height="15.0" fill="rgb(210,121,39)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="741" width="16.4" height="15.0" fill="rgb(210,96,49)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_character_class_matcher&lt;false, false&gt;() (30 samples, 41.67%)</title><rect x="616.4" y="613" width="491.7" height="15.0" fill="rgb(224,139,50)" rx="2" ry="2" />
<text text-anchor="" x="619.39" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate(std::allocator&lt;char&gt;&amp;, unsigned long) (2 samples, 2.78%)</title><rect x="944.2" y="469" width="32.7" height="15.0" fill="rgb(236,225,16)" rx="2" ry="2" />
<text text-anchor="" x="947.17" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::type std::__detail::__compile_nfa&lt;char const*, std::__cxx11::regex_traits&lt;char&gt; &gt;(char const*, char const*, std::__cxx11::regex_traits&lt;char&gt;::locale_type const&amp;, std::regex_constants::syntax_option_type) (71 samples, 98.61%)</title><rect x="10.0" y="789" width="1163.6" height="15.0" fill="rgb(215,197,9)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::ty..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="757" width="16.4" height="15.0" fill="rgb(208,175,46)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val) (3 samples, 4.17%)</title><rect x="649.2" y="533" width="49.1" height="15.0" fill="rgb(227,8,30)" rx="2" ry="2" />
<text text-anchor="" x="652.17" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__gn..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>0xffffffffffffffff (72 samples, 100.00%)</title><rect x="10.0" y="933" width="1180.0" height="15.0" fill="rgb(236,118,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >0xffffffffffffffff</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="293" width="16.4" height="15.0" fill="rgb(222,67,14)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const (6 samples, 8.33%)</title><rect x="763.9" y="517" width="98.3" height="15.0" fill="rgb(248,170,7)" rx="2" ry="2" />
<text text-anchor="" x="766.89" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__cxx1..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt;(char const*, char const*, char*) (1 samples, 1.39%)</title><rect x="911.4" y="389" width="16.4" height="15.0" fill="rgb(253,178,47)" rx="2" ry="2" />
<text text-anchor="" x="914.39" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate(std::allocator&lt;char&gt;&amp;, unsigned long) (2 samples, 2.78%)</title><rect x="468.9" y="437" width="32.8" height="15.0" fill="rgb(247,22,17)" rx="2" ry="2" />
<text text-anchor="" x="471.89" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;) (1 samples, 1.39%)</title><rect x="747.5" y="517" width="16.4" height="15.0" fill="rgb(209,58,42)" rx="2" ry="2" />
<text text-anchor="" x="750.50" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_clone(std::_Any_data&amp;, std::_Any_data const&amp;, std::integral_constant&lt;bool, false&gt;) (1 samples, 1.39%)</title><rect x="1140.8" y="549" width="16.4" height="15.0" fill="rgb(208,211,2)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::base() const (1 samples, 1.39%)</title><rect x="108.3" y="501" width="16.4" height="15.0" fill="rgb(239,166,11)" rx="2" ry="2" />
<text text-anchor="" x="111.33" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::_Destroy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;) (1 samples, 1.39%)</title><rect x="1108.1" y="533" width="16.3" height="15.0" fill="rgb(213,70,6)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="437" width="16.4" height="15.0" fill="rgb(213,98,14)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void __gnu_cxx::new_allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="1157.2" y="661" width="16.4" height="15.0" fill="rgb(242,102,25)" rx="2" ry="2" />
<text text-anchor="" x="1160.22" y="671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="1140.8" y="517" width="16.4" height="15.0" fill="rgb(222,93,47)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::swap&lt;bool (*)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)&gt;(bool (*&amp;)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation), bool (*&amp;)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)) (1 samples, 1.39%)</title><rect x="583.6" y="485" width="16.4" height="15.0" fill="rgb(219,158,46)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate(unsigned long) (3 samples, 4.17%)</title><rect x="927.8" y="485" width="49.1" height="15.0" fill="rgb(235,17,30)" rx="2" ry="2" />
<text text-anchor="" x="930.78" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom() (36 samples, 50.00%)</title><rect x="10.0" y="661" width="590.0" height="15.0" fill="rgb(207,143,53)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_State(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="1140.8" y="597" width="16.4" height="15.0" fill="rgb(227,199,51)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base() const (1 samples, 1.39%)</title><rect x="75.6" y="453" width="16.3" height="15.0" fill="rgb(210,183,9)" rx="2" ry="2" />
<text text-anchor="" x="78.56" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__stpncpy_sse2 (1 samples, 1.39%)</title><rect x="829.4" y="469" width="16.4" height="15.0" fill="rgb(252,214,41)" rx="2" ry="2" />
<text text-anchor="" x="832.44" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="632.8" y="549" width="16.4" height="15.0" fill="rgb(246,166,42)" rx="2" ry="2" />
<text text-anchor="" x="635.78" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::bitset&lt;256ul&gt;::operator[](unsigned long) (1 samples, 1.39%)</title><rect x="567.2" y="533" width="16.4" height="15.0" fill="rgb(252,122,7)" rx="2" ry="2" />
<text text-anchor="" x="570.22" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() (35 samples, 48.61%)</title><rect x="10.0" y="629" width="573.6" height="15.0" fill="rgb(237,79,45)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const (33 samples, 45.83%)</title><rect x="26.4" y="533" width="540.8" height="15.0" fill="rgb(250,68,12)" rx="2" ry="2" />
<text text-anchor="" x="29.39" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, fa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__stpncpy_sse2 (1 samples, 1.39%)</title><rect x="321.4" y="437" width="16.4" height="15.0" fill="rgb(247,144,20)" rx="2" ry="2" />
<text text-anchor="" x="324.39" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::function&lt;bool (char)&gt;::~function() (1 samples, 1.39%)</title><rect x="1108.1" y="453" width="16.3" height="15.0" fill="rgb(233,105,27)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::iterator_traits&lt;char*&gt;::difference_type std::__distance&lt;char*&gt;(char*, char*, std::random_access_iterator_tag) (1 samples, 1.39%)</title><rect x="223.1" y="405" width="16.3" height="15.0" fill="rgb(246,9,26)" rx="2" ry="2" />
<text text-anchor="" x="226.06" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="501" width="16.4" height="15.0" fill="rgb(249,49,52)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher() (1 samples, 1.39%)</title><rect x="1108.1" y="389" width="16.3" height="15.0" fill="rgb(244,179,51)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__uninitialized_copy_a&lt;char*, char*, char&gt;(char*, char*, char*, std::allocator&lt;char&gt;&amp;) (2 samples, 2.78%)</title><rect x="895.0" y="485" width="32.8" height="15.0" fill="rgb(231,162,37)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term() (34 samples, 47.22%)</title><rect x="26.4" y="613" width="557.2" height="15.0" fill="rgb(247,100,11)" rx="2" ry="2" />
<text text-anchor="" x="29.39" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::iterator_traits&lt;char*&gt;::difference_type std::distance&lt;char*&gt;(char*, char*) (1 samples, 1.39%)</title><rect x="223.1" y="421" width="16.3" height="15.0" fill="rgb(220,38,30)" rx="2" ry="2" />
<text text-anchor="" x="226.06" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="133" width="16.4" height="15.0" fill="rgb(226,127,26)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction() (35 samples, 48.61%)</title><rect x="10.0" y="645" width="573.6" height="15.0" fill="rgb(209,106,17)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator=(std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="1173.6" y="53" width="16.4" height="15.0" fill="rgb(237,188,53)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (1 samples, 1.39%)</title><rect x="845.8" y="485" width="16.4" height="15.0" fill="rgb(253,135,11)" rx="2" ry="2" />
<text text-anchor="" x="848.83" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="725" width="16.4" height="15.0" fill="rgb(217,4,51)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="583.6" y="581" width="16.4" height="15.0" fill="rgb(205,14,46)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::copy&lt;char*, char*&gt;(char*, char*, char*) (2 samples, 2.78%)</title><rect x="436.1" y="405" width="32.8" height="15.0" fill="rgb(240,166,28)" rx="2" ry="2" />
<text text-anchor="" x="439.11" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_init&lt;0000000000402e88&gt; (1 samples, 1.39%)</title><rect x="42.8" y="501" width="16.4" height="15.0" fill="rgb(205,105,9)" rx="2" ry="2" />
<text text-anchor="" x="45.78" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const (20 samples, 27.78%)</title><rect x="714.7" y="549" width="327.8" height="15.0" fill="rgb(248,84,27)" rx="2" ry="2" />
<text text-anchor="" x="717.72" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__cxx11::basic_string&lt;char, std::char_t..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::bitset&lt;256ul&gt;::operator[](unsigned long) (1 samples, 1.39%)</title><rect x="1075.3" y="565" width="16.4" height="15.0" fill="rgb(236,81,34)" rx="2" ry="2" />
<text text-anchor="" x="1078.28" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool __gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="157.5" y="501" width="16.4" height="15.0" fill="rgb(233,225,51)" rx="2" ry="2" />
<text text-anchor="" x="160.50" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() (36 samples, 50.00%)</title><rect x="10.0" y="709" width="590.0" height="15.0" fill="rgb(211,26,40)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_character_class_matcher&lt;false, false&gt;() (34 samples, 47.22%)</title><rect x="26.4" y="581" width="557.2" height="15.0" fill="rgb(225,13,25)" rx="2" ry="2" />
<text text-anchor="" x="29.39" y="591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="149" width="16.4" height="15.0" fill="rgb(253,165,7)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt;(char*, char*, char*) (3 samples, 4.17%)</title><rect x="419.7" y="421" width="49.2" height="15.0" fill="rgb(236,13,13)" rx="2" ry="2" />
<text text-anchor="" x="422.72" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >char..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>case1()&lt;00000000004037a8&gt; (72 samples, 100.00%)</title><rect x="10.0" y="869" width="1180.0" height="15.0" fill="rgb(246,122,3)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >case1()&lt;00000000004037a8&gt;</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::function&lt;bool (char)&gt;::function(std::function&lt;bool (char)&gt; const&amp;) (1 samples, 1.39%)</title><rect x="1140.8" y="581" width="16.4" height="15.0" fill="rgb(223,7,0)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_State() (1 samples, 1.39%)</title><rect x="1108.1" y="469" width="16.3" height="15.0" fill="rgb(248,102,10)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_init&lt;0000000000402e88&gt; (2 samples, 2.78%)</title><rect x="714.7" y="517" width="32.8" height="15.0" fill="rgb(221,158,14)" rx="2" ry="2" />
<text text-anchor="" x="717.72" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term() (36 samples, 50.00%)</title><rect x="10.0" y="677" width="590.0" height="15.0" fill="rgb(217,165,25)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_initialize_dispatch&lt;char*&gt;(char*, char*, std::__false_type) (5 samples, 6.94%)</title><rect x="895.0" y="517" width="81.9" height="15.0" fill="rgb(224,112,8)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="85" width="16.4" height="15.0" fill="rgb(234,72,21)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom() (34 samples, 47.22%)</title><rect x="26.4" y="597" width="557.2" height="15.0" fill="rgb(249,169,2)" rx="2" ry="2" />
<text text-anchor="" x="29.39" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="213" width="16.4" height="15.0" fill="rgb(219,190,17)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, std::random_access_iterator_tag) (3 samples, 4.17%)</title><rect x="649.2" y="501" width="49.1" height="15.0" fill="rgb(250,144,52)" rx="2" ry="2" />
<text text-anchor="" x="652.17" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="277" width="16.4" height="15.0" fill="rgb(239,179,30)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate(unsigned long) (2 samples, 2.78%)</title><rect x="468.9" y="453" width="32.8" height="15.0" fill="rgb(228,17,52)" rx="2" ry="2" />
<text text-anchor="" x="471.89" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_State(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="583.6" y="533" width="16.4" height="15.0" fill="rgb(209,123,45)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char() (1 samples, 1.39%)</title><rect x="1124.4" y="677" width="16.4" height="15.0" fill="rgb(254,18,22)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="645" width="16.4" height="15.0" fill="rgb(221,47,54)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() (1 samples, 1.39%)</title><rect x="600.0" y="645" width="16.4" height="15.0" fill="rgb(211,150,54)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;) (2 samples, 2.78%)</title><rect x="272.2" y="485" width="32.8" height="15.0" fill="rgb(222,179,9)" rx="2" ry="2" />
<text text-anchor="" x="275.22" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_init&lt;0000000000402e88&gt; (1 samples, 1.39%)</title><rect x="206.7" y="421" width="16.4" height="15.0" fill="rgb(232,62,37)" rx="2" ry="2" />
<text text-anchor="" x="209.67" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_option_type) (71 samples, 98.61%)</title><rect x="10.0" y="805" width="1163.6" height="15.0" fill="rgb(228,199,49)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_o..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, std::random_access_iterator_tag) (1 samples, 1.39%)</title><rect x="632.8" y="517" width="16.4" height="15.0" fill="rgb(206,30,30)" rx="2" ry="2" />
<text text-anchor="" x="635.78" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, unsigned long) (1 samples, 1.39%)</title><rect x="1108.1" y="341" width="16.3" height="15.0" fill="rgb(222,106,5)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::function&lt;bool (char)&gt;::function(std::function&lt;bool (char)&gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="1157.2" y="629" width="16.4" height="15.0" fill="rgb(231,155,7)" rx="2" ry="2" />
<text text-anchor="" x="1160.22" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin() (1 samples, 1.39%)</title><rect x="583.6" y="645" width="16.4" height="15.0" fill="rgb(232,63,7)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type) (71 samples, 98.61%)</title><rect x="10.0" y="837" width="1163.6" height="15.0" fill="rgb(244,22,28)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const (5 samples, 6.94%)</title><rect x="780.3" y="501" width="81.9" height="15.0" fill="rgb(230,88,45)" rx="2" ry="2" />
<text text-anchor="" x="783.28" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__cx..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="533" width="16.4" height="15.0" fill="rgb(253,87,18)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="421" width="16.4" height="15.0" fill="rgb(219,187,5)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready() (30 samples, 41.67%)</title><rect x="616.4" y="597" width="491.7" height="15.0" fill="rgb(253,188,50)" rx="2" ry="2" />
<text text-anchor="" x="619.39" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, fa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base() const (1 samples, 1.39%)</title><rect x="157.5" y="485" width="16.4" height="15.0" fill="rgb(206,133,2)" rx="2" ry="2" />
<text text-anchor="" x="160.50" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__GI___strxfrm_l (2 samples, 2.78%)</title><rect x="305.0" y="453" width="32.8" height="15.0" fill="rgb(221,25,14)" rx="2" ry="2" />
<text text-anchor="" x="308.00" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin() const (1 samples, 1.39%)</title><rect x="534.4" y="517" width="16.4" height="15.0" fill="rgb(238,205,16)" rx="2" ry="2" />
<text text-anchor="" x="537.44" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="181" width="16.4" height="15.0" fill="rgb(252,77,40)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;) (7 samples, 9.72%)</title><rect x="862.2" y="533" width="114.7" height="15.0" fill="rgb(251,104,27)" rx="2" ry="2" />
<text text-anchor="" x="865.22" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::vector&lt;ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready() (34 samples, 47.22%)</title><rect x="26.4" y="565" width="557.2" height="15.0" fill="rgb(230,5,11)" rx="2" ry="2" />
<text text-anchor="" x="29.39" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, fals..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="389" width="16.4" height="15.0" fill="rgb(225,198,51)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() (36 samples, 50.00%)</title><rect x="10.0" y="693" width="590.0" height="15.0" fill="rgb(227,43,26)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;) (7 samples, 9.72%)</title><rect x="386.9" y="501" width="114.8" height="15.0" fill="rgb(207,59,12)" rx="2" ry="2" />
<text text-anchor="" x="389.94" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::vector&lt;ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_match_token(std::__detail::_ScannerBase::_TokenT) (1 samples, 1.39%)</title><rect x="1124.4" y="661" width="16.4" height="15.0" fill="rgb(210,36,9)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memset_sse2 (1 samples, 1.39%)</title><rect x="813.1" y="469" width="16.3" height="15.0" fill="rgb(211,184,24)" rx="2" ry="2" />
<text text-anchor="" x="816.06" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::_Construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;) (1 samples, 1.39%)</title><rect x="1140.8" y="613" width="16.4" height="15.0" fill="rgb(252,80,44)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="632.8" y="501" width="16.4" height="15.0" fill="rgb(222,58,12)" rx="2" ry="2" />
<text text-anchor="" x="635.78" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*) (1 samples, 1.39%)</title><rect x="960.6" y="453" width="16.3" height="15.0" fill="rgb(237,127,2)" rx="2" ry="2" />
<text text-anchor="" x="963.56" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="101" width="16.4" height="15.0" fill="rgb(218,110,34)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::size() const (1 samples, 1.39%)</title><rect x="1173.6" y="37" width="16.4" height="15.0" fill="rgb(222,55,2)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__GI___strxfrm_l (4 samples, 5.56%)</title><rect x="780.3" y="485" width="65.5" height="15.0" fill="rgb(242,52,21)" rx="2" ry="2" />
<text text-anchor="" x="783.28" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__GI___..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size() const (1 samples, 1.39%)</title><rect x="239.4" y="485" width="16.4" height="15.0" fill="rgb(214,177,54)" rx="2" ry="2" />
<text text-anchor="" x="242.44" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;) (1 samples, 1.39%)</title><rect x="1108.1" y="597" width="16.3" height="15.0" fill="rgb(212,97,44)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="565" width="16.4" height="15.0" fill="rgb(233,62,28)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="341" width="16.4" height="15.0" fill="rgb(246,109,53)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type) (71 samples, 98.61%)</title><rect x="10.0" y="773" width="1163.6" height="15.0" fill="rgb(250,4,1)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool __gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="698.3" y="533" width="16.4" height="15.0" fill="rgb(239,152,47)" rx="2" ry="2" />
<text text-anchor="" x="701.33" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;) (30 samples, 41.67%)</title><rect x="616.4" y="581" width="491.7" height="15.0" fill="rgb(236,165,45)" rx="2" ry="2" />
<text text-anchor="" x="619.39" y="591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, fa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="75.6" y="469" width="16.3" height="15.0" fill="rgb(237,49,7)" rx="2" ry="2" />
<text text-anchor="" x="78.56" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() (69 samples, 95.83%)</title><rect x="10.0" y="725" width="1130.8" height="15.0" fill="rgb(240,180,22)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__dynamic_cast&lt;000000000008bf70&gt; (1 samples, 1.39%)</title><rect x="518.1" y="485" width="16.3" height="15.0" fill="rgb(237,34,45)" rx="2" ry="2" />
<text text-anchor="" x="521.06" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const (1 samples, 1.39%)</title><rect x="337.8" y="453" width="16.4" height="15.0" fill="rgb(211,197,54)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="709" width="16.4" height="15.0" fill="rgb(218,147,46)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>0x000000000192a008 (2 samples, 2.78%)</title><rect x="714.7" y="533" width="32.8" height="15.0" fill="rgb(253,120,45)" rx="2" ry="2" />
<text text-anchor="" x="717.72" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >0x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_base::~_Function_base()&lt;0000000000404578&gt; (1 samples, 1.39%)</title><rect x="1108.1" y="437" width="16.3" height="15.0" fill="rgb(254,23,50)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, std::random_access_iterator_tag) (1 samples, 1.39%)</title><rect x="141.1" y="469" width="16.4" height="15.0" fill="rgb(240,143,53)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (1 samples, 1.39%)</title><rect x="1108.1" y="421" width="16.3" height="15.0" fill="rgb(207,168,50)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="229" width="16.4" height="15.0" fill="rgb(222,153,2)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag) (6 samples, 8.33%)</title><rect x="403.3" y="469" width="98.4" height="15.0" fill="rgb(253,193,5)" rx="2" ry="2" />
<text text-anchor="" x="406.33" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::v..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;) (2 samples, 2.78%)</title><rect x="665.6" y="485" width="32.7" height="15.0" fill="rgb(235,49,45)" rx="2" ry="2" />
<text text-anchor="" x="668.56" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="405" width="16.4" height="15.0" fill="rgb(230,138,18)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (1 samples, 1.39%)</title><rect x="1140.8" y="565" width="16.4" height="15.0" fill="rgb(252,67,30)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector() (1 samples, 1.39%)</title><rect x="1108.1" y="373" width="16.3" height="15.0" fill="rgb(226,73,15)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() (32 samples, 44.44%)</title><rect x="600.0" y="661" width="524.4" height="15.0" fill="rgb(221,123,52)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternat..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt;(char const*, char const*, char*) (1 samples, 1.39%)</title><rect x="452.5" y="357" width="16.4" height="15.0" fill="rgb(246,110,39)" rx="2" ry="2" />
<text text-anchor="" x="455.50" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const (7 samples, 9.72%)</title><rect x="747.5" y="533" width="114.7" height="15.0" fill="rgb(217,5,9)" rx="2" ry="2" />
<text text-anchor="" x="750.50" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__cxx11::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, std::integral_constant&lt;bool, true&gt;) (1 samples, 1.39%)</title><rect x="1173.6" y="773" width="16.4" height="15.0" fill="rgb(233,181,11)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;) (3 samples, 4.17%)</title><rect x="124.7" y="517" width="49.2" height="15.0" fill="rgb(253,126,32)" rx="2" ry="2" />
<text text-anchor="" x="127.72" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >bool..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val) (1 samples, 1.39%)</title><rect x="141.1" y="501" width="16.4" height="15.0" fill="rgb(210,115,14)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="613" width="16.4" height="15.0" fill="rgb(236,198,11)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (2 samples, 2.78%)</title><rect x="1140.8" y="709" width="32.8" height="15.0" fill="rgb(225,192,0)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="117" width="16.4" height="15.0" fill="rgb(254,195,14)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator(std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const* const&amp;) (1 samples, 1.39%)</title><rect x="1058.9" y="533" width="16.4" height="15.0" fill="rgb(230,9,52)" rx="2" ry="2" />
<text text-anchor="" x="1061.89" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="1108.1" y="565" width="16.3" height="15.0" fill="rgb(227,23,3)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__GI___strnlen (1 samples, 1.39%)</title><rect x="829.4" y="453" width="16.4" height="15.0" fill="rgb(223,0,42)" rx="2" ry="2" />
<text text-anchor="" x="832.44" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_accept() (2 samples, 2.78%)</title><rect x="1140.8" y="757" width="32.8" height="15.0" fill="rgb(219,30,51)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_initialize_dispatch&lt;char*&gt;(char*, char*, std::__false_type) (7 samples, 9.72%)</title><rect x="386.9" y="485" width="114.8" height="15.0" fill="rgb(243,132,53)" rx="2" ry="2" />
<text text-anchor="" x="389.94" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::vect..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::_Destroy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*) (1 samples, 1.39%)</title><rect x="1108.1" y="517" width="16.3" height="15.0" fill="rgb(220,178,19)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="197" width="16.4" height="15.0" fill="rgb(223,193,17)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom() (30 samples, 41.67%)</title><rect x="616.4" y="629" width="491.7" height="15.0" fill="rgb(207,66,43)" rx="2" ry="2" />
<text text-anchor="" x="619.39" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_ato..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::_Destroy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*) (1 samples, 1.39%)</title><rect x="1108.1" y="485" width="16.3" height="15.0" fill="rgb(247,2,49)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const (11 samples, 15.28%)</title><rect x="173.9" y="501" width="180.3" height="15.0" fill="rgb(232,216,35)" rx="2" ry="2" />
<text text-anchor="" x="176.89" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__cxx11::basic_str..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom() (1 samples, 1.39%)</title><rect x="600.0" y="613" width="16.4" height="15.0" fill="rgb(219,132,22)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::copy&lt;char*, char*&gt;(char*, char*, char*) (2 samples, 2.78%)</title><rect x="895.0" y="437" width="32.8" height="15.0" fill="rgb(217,21,25)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;) (4 samples, 5.56%)</title><rect x="649.2" y="549" width="65.5" height="15.0" fill="rgb(250,34,38)" rx="2" ry="2" />
<text text-anchor="" x="652.17" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >bool st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base() const (1 samples, 1.39%)</title><rect x="698.3" y="517" width="16.4" height="15.0" fill="rgb(224,214,54)" rx="2" ry="2" />
<text text-anchor="" x="701.33" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;) (1 samples, 1.39%)</title><rect x="632.8" y="533" width="16.4" height="15.0" fill="rgb(249,145,14)" rx="2" ry="2" />
<text text-anchor="" x="635.78" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt;(char*, char*, std::__false_type) (1 samples, 1.39%)</title><rect x="747.5" y="485" width="16.4" height="15.0" fill="rgb(254,140,51)" rx="2" ry="2" />
<text text-anchor="" x="750.50" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction() (32 samples, 44.44%)</title><rect x="600.0" y="677" width="524.4" height="15.0" fill="rgb(214,74,12)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunct..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (2 samples, 2.78%)</title><rect x="59.2" y="517" width="32.7" height="15.0" fill="rgb(209,110,50)" rx="2" ry="2" />
<text text-anchor="" x="62.17" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main&lt;0000000000403977&gt; (72 samples, 100.00%)</title><rect x="10.0" y="885" width="1180.0" height="15.0" fill="rgb(232,123,33)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main&lt;0000000000403977&gt;</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt;(char*, char*, char*) (2 samples, 2.78%)</title><rect x="895.0" y="453" width="32.8" height="15.0" fill="rgb(208,143,18)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term() (33 samples, 45.83%)</title><rect x="600.0" y="709" width="540.8" height="15.0" fill="rgb(227,194,25)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag) (5 samples, 6.94%)</title><rect x="895.0" y="501" width="81.9" height="15.0" fill="rgb(217,191,45)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const (3 samples, 4.17%)</title><rect x="305.0" y="485" width="49.2" height="15.0" fill="rgb(224,139,38)" rx="2" ry="2" />
<text text-anchor="" x="308.00" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="469" width="16.4" height="15.0" fill="rgb(207,83,35)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() (1 samples, 1.39%)</title><rect x="255.8" y="485" width="16.4" height="15.0" fill="rgb(241,93,36)" rx="2" ry="2" />
<text text-anchor="" x="258.83" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::allocator_traits&lt;std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="583.6" y="565" width="16.4" height="15.0" fill="rgb(221,115,29)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::function&lt;bool (char)&gt;::swap(std::function&lt;bool (char)&gt;&amp;) (1 samples, 1.39%)</title><rect x="583.6" y="501" width="16.4" height="15.0" fill="rgb(232,93,18)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="1108.1" y="581" width="16.3" height="15.0" fill="rgb(225,74,32)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="583.6" y="597" width="16.4" height="15.0" fill="rgb(216,72,24)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__dynamic_cast&lt;000000000008bf70&gt; (1 samples, 1.39%)</title><rect x="354.2" y="485" width="16.4" height="15.0" fill="rgb(215,20,14)" rx="2" ry="2" />
<text text-anchor="" x="357.17" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>0x00007ffc6b49ebb4 (1 samples, 1.39%)</title><rect x="42.8" y="517" width="16.4" height="15.0" fill="rgb(223,31,13)" rx="2" ry="2" />
<text text-anchor="" x="45.78" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>0x00007ffc6b49e9bf (1 samples, 1.39%)</title><rect x="206.7" y="437" width="16.4" height="15.0" fill="rgb(220,207,32)" rx="2" ry="2" />
<text text-anchor="" x="209.67" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="693" width="16.4" height="15.0" fill="rgb(223,199,14)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin() const (1 samples, 1.39%)</title><rect x="550.8" y="517" width="16.4" height="15.0" fill="rgb(216,57,41)" rx="2" ry="2" />
<text text-anchor="" x="553.83" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_State(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="1157.2" y="645" width="16.4" height="15.0" fill="rgb(245,27,35)" rx="2" ry="2" />
<text text-anchor="" x="1160.22" y="655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier() (1 samples, 1.39%)</title><rect x="1108.1" y="629" width="16.3" height="15.0" fill="rgb(237,34,53)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end() const (1 samples, 1.39%)</title><rect x="1058.9" y="549" width="16.4" height="15.0" fill="rgb(221,209,19)" rx="2" ry="2" />
<text text-anchor="" x="1061.89" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, std::random_access_iterator_tag) (1 samples, 1.39%)</title><rect x="75.6" y="485" width="16.3" height="15.0" fill="rgb(240,146,35)" rx="2" ry="2" />
<text text-anchor="" x="78.56" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) (1 samples, 1.39%)</title><rect x="747.5" y="469" width="16.4" height="15.0" fill="rgb(247,54,18)" rx="2" ry="2" />
<text text-anchor="" x="750.50" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::uninitialized_copy&lt;char*, char*&gt;(char*, char*, char*) (2 samples, 2.78%)</title><rect x="895.0" y="469" width="32.8" height="15.0" fill="rgb(214,88,31)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat(long, long, bool) (1 samples, 1.39%)</title><rect x="1108.1" y="613" width="16.3" height="15.0" fill="rgb(233,176,24)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_ZNKUlRKT_E0_clIA15_cEEDaS1_&lt;0000000000403776&gt; (71 samples, 98.61%)</title><rect x="10.0" y="853" width="1163.6" height="15.0" fill="rgb(212,38,33)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_ZNKUlRKT_E0_clIA15_cEEDaS1_&lt;0000000000403776&gt;</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*) (1 samples, 1.39%)</title><rect x="1140.8" y="629" width="16.4" height="15.0" fill="rgb(247,211,25)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::match_results&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::const_iterator, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) (1 samples, 1.39%)</title><rect x="1173.6" y="853" width="16.4" height="15.0" fill="rgb(222,25,0)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new[](unsigned long) (1 samples, 1.39%)</title><rect x="485.3" y="405" width="16.4" height="15.0" fill="rgb(232,99,28)" rx="2" ry="2" />
<text text-anchor="" x="488.28" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt;(char*, char*, std::__false_type) (2 samples, 2.78%)</title><rect x="206.7" y="453" width="32.7" height="15.0" fill="rgb(222,126,24)" rx="2" ry="2" />
<text text-anchor="" x="209.67" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="325" width="16.4" height="15.0" fill="rgb(210,84,0)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__dynamic_cast&lt;000000000008bf70&gt; (1 samples, 1.39%)</title><rect x="288.6" y="469" width="16.4" height="15.0" fill="rgb(220,121,30)" rx="2" ry="2" />
<text text-anchor="" x="291.61" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main&lt;0000000000020740&gt; (72 samples, 100.00%)</title><rect x="10.0" y="901" width="1180.0" height="15.0" fill="rgb(213,218,6)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main&lt;0000000000020740&gt;</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term() (1 samples, 1.39%)</title><rect x="600.0" y="629" width="16.4" height="15.0" fill="rgb(239,110,9)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="1108.1" y="549" width="16.3" height="15.0" fill="rgb(209,41,30)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom() (33 samples, 45.83%)</title><rect x="600.0" y="693" width="540.8" height="15.0" fill="rgb(253,91,34)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (2 samples, 2.78%)</title><rect x="1140.8" y="725" width="32.8" height="15.0" fill="rgb(217,171,19)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::allocator_traits&lt;std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="1157.2" y="677" width="16.4" height="15.0" fill="rgb(240,135,1)" rx="2" ry="2" />
<text text-anchor="" x="1160.22" y="687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const (3 samples, 4.17%)</title><rect x="305.0" y="469" width="49.2" height="15.0" fill="rgb(205,63,50)" rx="2" ry="2" />
<text text-anchor="" x="308.00" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="309" width="16.4" height="15.0" fill="rgb(231,46,51)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::swap&lt;bool (*)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)&gt;(bool (*&amp;)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation), bool (*&amp;)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)) (1 samples, 1.39%)</title><rect x="1157.2" y="597" width="16.4" height="15.0" fill="rgb(206,179,44)" rx="2" ry="2" />
<text text-anchor="" x="1160.22" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::uninitialized_copy&lt;char*, char*&gt;(char*, char*, char*) (3 samples, 4.17%)</title><rect x="419.7" y="437" width="49.2" height="15.0" fill="rgb(248,14,19)" rx="2" ry="2" />
<text text-anchor="" x="422.72" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >char..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl() (1 samples, 1.39%)</title><rect x="1009.7" y="501" width="16.4" height="15.0" fill="rgb(206,189,29)" rx="2" ry="2" />
<text text-anchor="" x="1012.72" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memset_sse2 (1 samples, 1.39%)</title><rect x="305.0" y="437" width="16.4" height="15.0" fill="rgb(208,6,45)" rx="2" ry="2" />
<text text-anchor="" x="308.00" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool __gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;) (1 samples, 1.39%)</title><rect x="108.3" y="517" width="16.4" height="15.0" fill="rgb(239,15,10)" rx="2" ry="2" />
<text text-anchor="" x="111.33" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() (1 samples, 1.39%)</title><rect x="10.0" y="613" width="16.4" height="15.0" fill="rgb(219,48,35)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::bitset&lt;256ul&gt;::reference::reference(std::bitset&lt;256ul&gt;&amp;, unsigned long) (1 samples, 1.39%)</title><rect x="1075.3" y="549" width="16.4" height="15.0" fill="rgb(232,24,52)" rx="2" ry="2" />
<text text-anchor="" x="1078.28" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start&lt;00000000004034f0&gt; (72 samples, 100.00%)</title><rect x="10.0" y="917" width="1180.0" height="15.0" fill="rgb(239,126,26)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start&lt;00000000004034f0&gt;</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="661" width="16.4" height="15.0" fill="rgb(242,108,36)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="453" width="16.4" height="15.0" fill="rgb(226,110,22)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="517" width="16.4" height="15.0" fill="rgb(247,103,43)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="581" width="16.4" height="15.0" fill="rgb(238,39,7)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_move_if_noexcept_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;) (1 samples, 1.39%)</title><rect x="1140.8" y="677" width="16.4" height="15.0" fill="rgb(243,199,3)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator() (1 samples, 1.39%)</title><rect x="993.3" y="517" width="16.4" height="15.0" fill="rgb(211,46,41)" rx="2" ry="2" />
<text text-anchor="" x="996.33" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector() (4 samples, 5.56%)</title><rect x="976.9" y="533" width="65.6" height="15.0" fill="rgb(209,100,49)" rx="2" ry="2" />
<text text-anchor="" x="979.94" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::ve..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin() const (1 samples, 1.39%)</title><rect x="1140.8" y="501" width="16.4" height="15.0" fill="rgb(217,84,22)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (72 samples, 100%)</title><rect x="10.0" y="949" width="1180.0" height="15.0" fill="rgb(206,97,39)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction() (69 samples, 95.83%)</title><rect x="10.0" y="757" width="1130.8" height="15.0" fill="rgb(205,35,45)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="583.6" y="613" width="16.4" height="15.0" fill="rgb(242,223,41)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size() const (1 samples, 1.39%)</title><rect x="370.6" y="501" width="16.3" height="15.0" fill="rgb(221,113,43)" rx="2" ry="2" />
<text text-anchor="" x="373.56" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;) (1 samples, 1.39%)</title><rect x="583.6" y="629" width="16.4" height="15.0" fill="rgb(245,194,21)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) (1 samples, 1.39%)</title><rect x="223.1" y="437" width="16.3" height="15.0" fill="rgb(239,222,2)" rx="2" ry="2" />
<text text-anchor="" x="226.06" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;) (34 samples, 47.22%)</title><rect x="26.4" y="549" width="557.2" height="15.0" fill="rgb(227,92,11)" rx="2" ry="2" />
<text text-anchor="" x="29.39" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, fals..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="677" width="16.4" height="15.0" fill="rgb(241,196,9)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base() (1 samples, 1.39%)</title><rect x="1108.1" y="357" width="16.3" height="15.0" fill="rgb(231,94,29)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="357" width="16.4" height="15.0" fill="rgb(241,226,37)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term() (31 samples, 43.06%)</title><rect x="616.4" y="645" width="508.0" height="15.0" fill="rgb(209,182,19)" rx="2" ry="2" />
<text text-anchor="" x="619.39" y="655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*) (2 samples, 2.78%)</title><rect x="436.1" y="389" width="32.8" height="15.0" fill="rgb(219,162,41)" rx="2" ry="2" />
<text text-anchor="" x="439.11" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;) (3 samples, 4.17%)</title><rect x="649.2" y="517" width="49.1" height="15.0" fill="rgb(229,214,30)" rx="2" ry="2" />
<text text-anchor="" x="652.17" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;) (1 samples, 1.39%)</title><rect x="75.6" y="501" width="16.3" height="15.0" fill="rgb(250,7,16)" rx="2" ry="2" />
<text text-anchor="" x="78.56" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*) (2 samples, 2.78%)</title><rect x="206.7" y="469" width="32.7" height="15.0" fill="rgb(243,38,1)" rx="2" ry="2" />
<text text-anchor="" x="209.67" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::iterator_traits&lt;char*&gt;::difference_type std::distance&lt;char*&gt;(char*, char*) (1 samples, 1.39%)</title><rect x="747.5" y="453" width="16.4" height="15.0" fill="rgb(211,96,42)" rx="2" ry="2" />
<text text-anchor="" x="750.50" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="69" width="16.4" height="15.0" fill="rgb(234,224,52)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::function&lt;bool (char)&gt;::swap(std::function&lt;bool (char)&gt;&amp;) (1 samples, 1.39%)</title><rect x="1157.2" y="613" width="16.4" height="15.0" fill="rgb(226,46,30)" rx="2" ry="2" />
<text text-anchor="" x="1160.22" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (2 samples, 2.78%)</title><rect x="1140.8" y="693" width="32.8" height="15.0" fill="rgb(238,60,42)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::_Destroy&lt;char*, char&gt;(char*, char*, std::allocator&lt;char&gt;&amp;) (1 samples, 1.39%)</title><rect x="1026.1" y="517" width="16.4" height="15.0" fill="rgb(210,46,3)" rx="2" ry="2" />
<text text-anchor="" x="1029.11" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_destroy(std::_Any_data&amp;, std::integral_constant&lt;bool, false&gt;) (1 samples, 1.39%)</title><rect x="1108.1" y="405" width="16.3" height="15.0" fill="rgb(235,61,32)" rx="2" ry="2" />
<text text-anchor="" x="1111.06" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="549" width="16.4" height="15.0" fill="rgb(215,73,11)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void __gnu_cxx::new_allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="583.6" y="549" width="16.4" height="15.0" fill="rgb(247,132,17)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;) (1 samples, 1.39%)</title><rect x="354.2" y="501" width="16.4" height="15.0" fill="rgb(229,84,17)" rx="2" ry="2" />
<text text-anchor="" x="357.17" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::function&lt;bool (char)&gt;::function(std::function&lt;bool (char)&gt;&amp;&amp;) (1 samples, 1.39%)</title><rect x="583.6" y="517" width="16.4" height="15.0" fill="rgb(229,88,34)" rx="2" ry="2" />
<text text-anchor="" x="586.61" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) (1 samples, 1.39%)</title><rect x="1173.6" y="837" width="16.4" height="15.0" fill="rgb(231,187,41)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="485" width="16.4" height="15.0" fill="rgb(246,75,9)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__GI___strnlen (1 samples, 1.39%)</title><rect x="321.4" y="421" width="16.4" height="15.0" fill="rgb(212,71,32)" rx="2" ry="2" />
<text text-anchor="" x="324.39" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type) (71 samples, 98.61%)</title><rect x="10.0" y="821" width="1163.6" height="15.0" fill="rgb(218,228,36)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::bitset&lt;256ul&gt;::reference::reference(std::bitset&lt;256ul&gt;&amp;, unsigned long) (1 samples, 1.39%)</title><rect x="567.2" y="517" width="16.4" height="15.0" fill="rgb(213,164,28)" rx="2" ry="2" />
<text text-anchor="" x="570.22" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__uninitialized_copy_a&lt;char*, char*, char&gt;(char*, char*, char*, std::allocator&lt;char&gt;&amp;) (3 samples, 4.17%)</title><rect x="419.7" y="453" width="49.2" height="15.0" fill="rgb(243,193,18)" rx="2" ry="2" />
<text text-anchor="" x="422.72" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >char..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more(std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Match_mode, long) (1 samples, 1.39%)</title><rect x="1173.6" y="165" width="16.4" height="15.0" fill="rgb(231,147,53)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const&lt;000000000008e2a0&gt; (1 samples, 1.39%)</title><rect x="288.6" y="453" width="16.4" height="15.0" fill="rgb(249,70,25)" rx="2" ry="2" />
<text text-anchor="" x="291.61" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;) (1 samples, 1.39%)</title><rect x="141.1" y="485" width="16.4" height="15.0" fill="rgb(239,96,20)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match() (1 samples, 1.39%)</title><rect x="1173.6" y="805" width="16.4" height="15.0" fill="rgb(243,214,11)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>char* std::__copy_move_a&lt;false, char*, char*&gt;(char*, char*, char*) (1 samples, 1.39%)</title><rect x="452.5" y="373" width="16.4" height="15.0" fill="rgb(226,14,5)" rx="2" ry="2" />
<text text-anchor="" x="455.50" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::uninitialized_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*) (1 samples, 1.39%)</title><rect x="1140.8" y="645" width="16.4" height="15.0" fill="rgb(217,53,5)" rx="2" ry="2" />
<text text-anchor="" x="1143.83" y="655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) (1 samples, 1.39%)</title><rect x="1173.6" y="821" width="16.4" height="15.0" fill="rgb(215,72,39)" rx="2" ry="2" />
<text text-anchor="" x="1176.61" y="831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;) (2 samples, 2.78%)</title><rect x="206.7" y="485" width="32.7" height="15.0" fill="rgb(215,143,40)" rx="2" ry="2" />
<text text-anchor="" x="209.67" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() (69 samples, 95.83%)</title><rect x="10.0" y="741" width="1130.8" height="15.0" fill="rgb(206,114,46)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const (28 samples, 38.89%)</title><rect x="616.4" y="565" width="458.9" height="15.0" fill="rgb(230,217,54)" rx="2" ry="2" />
<text text-anchor="" x="619.39" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char..</text>
</g>
</svg>
